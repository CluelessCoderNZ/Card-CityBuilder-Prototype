[gd_scene load_steps=4 format=2]

[ext_resource path="res://GameMap.tscn" type="PackedScene" id=1]
[ext_resource path="res://GameHand.tscn" type="PackedScene" id=2]

[sub_resource type="GDScript" id=1]

script/source = "extends Camera2D

# Exports
export (float) var MAX_ZOOM_LEVEL
export (float) var MIN_ZOOM_LEVEL
export (float) var ZOOM_INCREMENT

# Signals
signal moved()
signal zoomed()

# Members
var _current_zoom_level = 1
var _drag = false


func center_game_hand_in_view():
	var ctrans = get_canvas_transform()
	var min_pos = -ctrans.get_origin() / ctrans.get_scale()
	var view_size = get_viewport_rect().size / ctrans.get_scale()
	var max_pos = min_pos + view_size
	
	$GameHand.global_position.x = min_pos.x + 0.5*view_size.x
	$GameHand.global_position.y = max_pos.y
	$GameHand.scale.x = 1.0 / ctrans.get_scale().x
	$GameHand.scale.y = 1.0 / ctrans.get_scale().y


func _input(event):
    if event.is_action_pressed(\"camera_drag\"):
        _drag = true
    elif event.is_action_released(\"camera_drag\"):
        _drag = false
    elif event.is_action(\"camera_zoom_in\"):
        _update_zoom(-ZOOM_INCREMENT, get_local_mouse_position())
    elif event.is_action(\"camera_zoom_out\"):
        _update_zoom(ZOOM_INCREMENT, get_local_mouse_position())
    elif event is InputEventMouseMotion && _drag:
        set_offset(get_offset() - event.relative*_current_zoom_level)
        emit_signal(\"moved\")

func _update_zoom(incr, zoom_anchor):
    var old_zoom = _current_zoom_level
    _current_zoom_level += incr * old_zoom
    if _current_zoom_level < MAX_ZOOM_LEVEL:
        _current_zoom_level = MAX_ZOOM_LEVEL
    elif _current_zoom_level > MIN_ZOOM_LEVEL:
        _current_zoom_level = MIN_ZOOM_LEVEL
    if old_zoom == _current_zoom_level:
        return
    
    var zoom_center = zoom_anchor - get_offset()
    var ratio = 1-_current_zoom_level/old_zoom
    set_offset(get_offset() + zoom_center*ratio)
    
    set_zoom(Vector2(_current_zoom_level, _current_zoom_level))
    emit_signal(\"zoomed\")
	
func _process(delta):
	center_game_hand_in_view()
"

[node name="Root" type="Node"]

[node name="Camera" type="Camera2D" parent="." index="0"]

position = Vector2( 686.58, 386.78 )
anchor_mode = 1
rotating = false
current = true
zoom = Vector2( 0.5, 0.5 )
limit_left = -10000000
limit_top = -10000000
limit_right = 10000000
limit_bottom = 10000000
limit_smoothed = false
drag_margin_h_enabled = true
drag_margin_v_enabled = true
smoothing_enabled = false
smoothing_speed = 5.0
offset_v = 0.0
offset_h = 0.0
drag_margin_left = 0.2
drag_margin_top = 0.2
drag_margin_right = 0.2
drag_margin_bottom = 0.2
editor_draw_screen = true
editor_draw_limits = false
editor_draw_drag_margin = false
script = SubResource( 1 )
_sections_unfolded = [ "Transform" ]
MAX_ZOOM_LEVEL = 0.1
MIN_ZOOM_LEVEL = 2.0
ZOOM_INCREMENT = 0.05

[node name="GameMap" parent="Camera" index="0" instance=ExtResource( 1 )]

position = Vector2( 6.89648, -236.825 )
_sections_unfolded = [ "Transform", "Z Index" ]

[node name="GameHand" parent="Camera" index="1" instance=ExtResource( 2 )]


